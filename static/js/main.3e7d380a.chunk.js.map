{"version":3,"sources":["component/navBar.js","component/feedArticle.js","component/feedGif.js","pages/feedPage.js","pages/loginPage.js","pages/logoutPage.js","routes.js","App.js","index.js"],"names":["NavbarPage","state","isOpen","toggleCollapse","setState","color","dark","expand","className","onClick","this","id","navbar","left","active","to","right","nav","caret","icon","href","Component","FeedArticle","props","localStorage","removeItem","md","style","margin","post","title","FeedGif","src","imageUrl","waves","FeedPage","getFeed","Promise","resolve","reject","fetch","method","headers","getItem","then","res","json","data","result","map","articleId","key","gifId","console","log","catch","err","feed","length","LoginFormPage","handleInput","e","target","name","value","sendForm","body","JSON","stringify","email","password","token","userId","setItem","loggedIn","alert","label","group","type","validate","error","success","onInput","LogoutPage","Routes","currentToken","getNavbar","exact","path","component","LoginPage","render","React","App","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e7d380a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  isOpen: false\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <Router>\r\n      <MDBNavbar color=\"indigo\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <strong className=\"white-text\">TEAMWORK</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem active>\r\n              <MDBNavLink to=\"/\">Feed</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/post-article\">Post Article</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"/post-gif\">Post Gif</MDBNavLink>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\" />\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\">\r\n                  <MDBDropdownItem href=\"#!\">change password</MDBDropdownItem>\r\n                  <MDBDropdownItem href=\"/signout\">logout</MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React from \"react\";\r\nimport { MDBIcon,MDBInput,MDBCardText,MDBBtn,MDBCardTitle,MDBRow,MDBCol,MDBCard,MDBCardBody,MDBCardImage } from 'mdbreact';\r\n\r\nconst FeedArticle = (props) => {\r\n  localStorage.removeItem('token')\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardText>\r\n            {props.post.post}\r\n          </MDBCardText>\r\n          <MDBBtn href=\"#\">Comments</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedArticle;\r\n\r\n\r\n/*\r\n\r\n*/","import React from \"react\";\r\nimport { MDBIcon,MDBInput,MDBCardText,MDBBtn,MDBCardTitle,MDBRow,MDBCol,MDBCard,MDBCardBody,MDBCardImage } from 'mdbreact';\r\n\r\nconst FeedGif = (props) => {\r\n  localStorage.removeItem('token')\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardImage className=\"img-fluid\" src={props.post.imageUrl} waves />\r\n          <MDBBtn href=\"#\">Comments</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedGif;\r\n\r\n\r\n/*\r\n\r\n*/","import React,{ Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FeedArticle from '../component/feedArticle'\r\nimport FeedGif from '../component/feedGif'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\n// , MDBCol, MDBInput, MDBBtn\r\n/*\r\n data.gifId = post.id\r\n                \r\n                data.createdOn = post.createdAt\r\n                data.title = post.title\r\n                data.flag = post.flaged\r\n                data.imageUrl = post.post\r\n                data.flag = post.flaged\r\n            } else {\r\n                data.articleId = post.id\r\n                data.message = 'Article was successfully posted';\r\n                data.createdOn = post.createdAt\r\n                data.flag = post.flaged\r\n                data.title = post.title\r\n                data.post = post.post\r\n                data.flag = post.flaged\r\n*/\r\nclass FeedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      feed: []\r\n    };\r\n  }\r\ngetFeed = () => {\r\n  return new Promise((resolve,reject)=>{\r\n    // http://localhost:3337/api/v1/auth/signin\r\n    // https://teamwork-leo.herokuapp.com/\r\n    // console.log('STATE',this.state);\r\n    fetch('https://teamwork-leo.herokuapp.com/api/v1/feed', {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n          const result = data.data.map((post)=>{\r\n          if(post.articleId){\r\n            return (<FeedArticle key= {post.articleId} post={post}></FeedArticle>)\r\n          }else{\r\n            return (<FeedGif key={post.gifId} post={post}></FeedGif>)\r\n          }\r\n          })\r\n          console.log('FEED', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\n\r\nrender(){\r\n  const token = localStorage.getItem('token')\r\n  if(!token){\r\n      return <Redirect to=\"/signin\" />\r\n  }\r\n  if(this.state.feed.length===0){\r\n    this.getFeed().then((data)=>{\r\n      this.setState({feed:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return (     \r\n      <MDBContainer> \r\n        <MDBRow>\r\n          {this.state.feed}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   \r\n  \r\n  );\r\n};\r\n}\r\n\r\nexport default FeedPage;","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass LoginFormPage extends Component {\r\n  constructor() {\r\n    super();\r\n    const token = localStorage.getItem('token')\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      token,\r\n      userId: '',\r\n      loggedIn:false\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n\r\n    // http://localhost:3337/api/v1/auth/signin\r\n    // https://teamwork-leo.herokuapp.com/\r\n    // console.log('STATE',this.state);\r\n    fetch('https://teamwork-leo.herokuapp.com/api/v1/auth/signin', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      })\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            console.log('DATA:', `${data.data.token} ${data.data.userId}`)\r\n            const token = data.data.token\r\n            const userId = data.data.userId\r\n            localStorage.setItem('token', token)\r\n            localStorage.setItem('userId', userId)\r\n            this.setState({token})\r\n            this.setState({loggedIn:true})\r\n        })\r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid username or password')\r\n    });\r\n  }\r\n\r\n   render() {\r\n    if(this.state.loggedIn){\r\n       return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"6\">\r\n          <form>\r\n            <p className=\"h5 text-center mb-4\">Sign in</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Type your email\"\r\n                icon=\"envelope\"\r\n                group\r\n                type=\"email\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onInput={this.handleInput}\r\n              />\r\n              <MDBInput\r\n                label=\"Type your password\"\r\n                icon=\"lock\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onInput={this.handleInput}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Login</MDBBtn>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    )}\r\n}\r\n\r\n\r\nexport default LoginFormPage;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n//import { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nconst LogoutPage = () => {\r\n  localStorage.removeItem('token')\r\n  return (\r\n    <div>\r\n      You have been logged out.\r\n      <Redirect to=\"/signin\" />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default LogoutPage;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\n// navigation bar\r\nimport NavBar from './component/navBar'\r\n// Route Pages\r\nimport FeedPage from './pages/feedPage';\r\nimport LoginPage from './pages/loginPage';\r\nimport LogoutPage from './pages/logoutPage';\r\n\r\n\r\n\r\nclass Routes extends React.Component {\r\n\r\n      constructor() {\r\n    super();\r\n    const currentToken = localStorage.getItem('token')\r\n    this.state = {\r\n      token: currentToken\r\n    };\r\n  }\r\n    getNavbar(){\r\n        if (!this.state.token){\r\n            return\r\n        }\r\n        return <NavBar/>\r\n    }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n        <>\r\n        {this.getNavbar()}\r\n      <Switch>\r\n        <Route exact path='/' component={FeedPage} />\r\n        {/* FREE */}\r\n        <Route path='/signin' component={LoginPage} />\r\n        <Route path='/signout' component={LogoutPage} />\r\n        <Route\r\n          render={function() {\r\n            return <h1>Not Found</h1>;\r\n          }} \r\n        />\r\n      </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n  return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n          <Routes />\r\n        </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// MDLREACT\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}
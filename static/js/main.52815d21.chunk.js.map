{"version":3,"sources":["config/variables.js","component/feedArticle.js","component/feedGif.js","component/navBar.js","pages/feedPage.js","pages/loginPage.js","pages/logoutPage.js","pages/articlesPostPage.js","pages/gifsPostPage.js","pages/articlesPage.js","component/commentsPost.js","pages/commentsPostPage.js","pages/commentsPage.js","component/gifPost.js","pages/gifsPage.js","routes.js","App.js","index.js"],"names":["module","exports","APIendpoint","FeedArticle","props","link","post","articleId","md","style","margin","title","href","FeedGif","gifId","className","src","imageUrl","waves","NavbarPage","state","isOpen","token","localStorage","getItem","toggleCollapse","setState","this","color","dark","expand","onClick","id","navbar","left","right","nav","caret","icon","to","Component","FeedPage","getFeed","Promise","resolve","reject","fetch","method","headers","then","res","json","data","result","map","key","console","log","catch","err","feed","length","LoginFormPage","handleInput","e","target","name","value","sendForm","body","JSON","stringify","email","password","userId","removeItem","setItem","loggedIn","alert","onSubmit","label","group","type","validate","error","success","onInput","LogoutPage","ArticlesPostPage","isGif","authorId","flaged","createdOn","Date","articlePath","GifsPostPage","fileInputHandler","current","files","fileData","FormData","append","file","React","createRef","ref","match","params","comment","width","CommentsPostPage","postId","reLoadComments","rows","CommentsPage","getComments","commentId","comments","Routes","tag","path","component","LoginPage","ArticlesPage","GifsPage","exact","render","App","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.52815d21.chunk.js","sourcesContent":["\r\n\r\n// const APIendpoint = \"http://localhost:3337/api/v1\"\r\nconst APIendpoint = \"https://teamwork-leo.herokuapp.com/api/v1\"\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = {APIendpoint}","import React from \"react\";\r\nimport { MDBCardText,MDBBtn,MDBCardTitle,MDBCol,MDBCard,MDBCardBody } from 'mdbreact';\r\n\r\nconst FeedArticle = (props) => {\r\n   const link = \"/articles/\"+ props.post.articleId\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardText>\r\n            {props.post.post}\r\n          </MDBCardText>\r\n          <MDBBtn href={link}>View</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedArticle;\r\n\r\n\r\n/*\r\n\r\n*/","import React from \"react\";\r\nimport {MDBBtn,MDBCardTitle,MDBCol,MDBCard,MDBCardBody,MDBCardImage } from 'mdbreact';\r\n\r\nconst FeedGif = (props) => {\r\n  const link = \"/gifs/\"+ props.post.gifId\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardImage className=\"img-fluid\" src={props.post.imageUrl} waves />\r\n          <MDBBtn href={link}>View</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedGif;\r\n\r\n\r\n/*\r\n\r\n*/","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\r\nimport { BrowserRouter as Router,Redirect } from 'react-router-dom';\r\n\r\n\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  isOpen: false,\r\n  token:localStorage.getItem('token')\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\nrender() {\r\n    if (!this.state.token){\r\n      return <Redirect to=\"/signin\"/>\r\n    }\r\n  return (\r\n    <Router>\r\n      <MDBNavbar color=\"aqua-gradient\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <strong className=\"white-text\">TEAMWORK</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem>\r\n              <MDBDropdownItem  href=\"/\">Feed</MDBDropdownItem>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBDropdownItem href=\"/post-article\">Post Article</MDBDropdownItem>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBDropdownItem  href=\"/post-gif\">Post Gif</MDBDropdownItem >\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\" />\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\">\r\n                  <MDBDropdownItem href=\"/signout\">logout</MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React,{ Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FeedArticle from '../component/feedArticle'\r\nimport FeedGif from '../component/feedGif'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport NavBar from '../component/navBar'\r\nimport {APIendpoint} from '../config/variables'\r\n\r\nclass FeedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      feed: []\r\n    };\r\n  }\r\ngetFeed = () => {\r\n  return new Promise((resolve,reject)=>{\r\n    fetch(APIendpoint +'/feed', {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n          const result = data.data.map((post)=>{\r\n          if(post.articleId){\r\n            return (<FeedArticle key= {post.articleId} post={post}></FeedArticle>)\r\n          }else{\r\n            return (<FeedGif key={post.gifId} post={post}></FeedGif>)\r\n          }\r\n          })\r\n          console.log('FEED', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\n\r\nrender(){\r\n  const token = localStorage.getItem('token')\r\n  if(!token){\r\n      return <Redirect to=\"/signin\" />\r\n  }\r\n  if(this.state.feed.length===0){\r\n    this.getFeed().then((data)=>{\r\n      this.setState({feed:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return ( \r\n    <>\r\n    <NavBar/>\r\n      <MDBContainer> \r\n        <MDBRow>\r\n          {this.state.feed}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default FeedPage;","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,MDBCard,MDBCardBody} from 'mdbreact';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass LoginFormPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      loggedIn:false\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n\r\n    fetch(APIendpoint + '/auth/signin', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      })\r\n    })\r\n    .then(res => {\r\n      console.log('RAW RES', res);\r\n        res.json().then((data)=>{\r\n          console.log('RAW DATA:', data)\r\n            console.log('DATA:', `${data.data.token} ${data.data.userId}`)\r\n\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('userId')\r\n          if(data.data.token){\r\n            localStorage.setItem('token', data.data.token)\r\n            localStorage.setItem('userId', data.data.userId)\r\n          }\r\n            console.log(\"LOCAL TOKEN\",localStorage.getItem('token'))\r\n            this.setState({loggedIn:true})\r\n        }).catch(err => {\r\n            console.log(err)\r\n            alert('Invalid username or password')\r\n        });\r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid username or password')\r\n    });\r\n  }\r\n\r\n   render() {\r\n    if(this.state.loggedIn){\r\n       return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard style={{ margin: \"10%\" }}>\r\n        <MDBCardBody>\r\n          <form onSubmit = {this.sendForm}>\r\n            <p className=\"h5 text-center mb-4\">Sign in</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Type your email\"\r\n                icon=\"envelope\"\r\n                group\r\n                type=\"email\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onInput={this.handleInput}\r\n              />\r\n              <MDBInput\r\n                label=\"Type your password\"\r\n                icon=\"lock\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onInput={this.handleInput}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Login</MDBBtn>\r\n            </div>\r\n          </form>\r\n          </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    )}\r\n}\r\n\r\n\r\nexport default LoginFormPage;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst LogoutPage = () => {\r\n  localStorage.removeItem('token')\r\n  return (\r\n    <div>\r\n      You have been logged out.\r\n      <Redirect to=\"/signin\" />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default LogoutPage;","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,MDBCard,MDBCardBody } from 'mdbreact';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NavBar from '../component/navBar'\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass ArticlesPostPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      post: '',\r\n      articleId:0\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n    if (!this.state.title || !this.state.post){\r\n        alert('Enter valid Title or Post ')\r\n        return\r\n    }\r\n\r\n    fetch(APIendpoint + '/articles', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        title: this.state.title,\r\n        post: this.state.post,\r\n        isGif:false,\r\n        authorId:4,\r\n        flaged:false,\r\n        createdOn:new Date()\r\n      })\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            console.log('DATA:', JSON.stringify(data.data))\r\n            this.setState({articleId:data.data.articleId})\r\n        })\r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid username or password')\r\n    });\r\n  }\r\n\r\n   render() {\r\n    if(this.state.articleId>0){\r\n        const articlePath = '/articles/'+this.state.articleId\r\n       return <Redirect to={articlePath} />\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <NavBar/>\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard style={{ margin: \"10%\" }}>\r\n        <MDBCardBody>\r\n          <form onSubmit={this.sendForm}>\r\n            <p className=\"h5 text-center mb-4\">Post Article</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Article Title\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"title\"\r\n                value={this.state.title}\r\n                onInput={this.handleInput}\r\n              />\r\n              <MDBInput\r\n                label=\"Article Post\"\r\n                group\r\n                type=\"textarea\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"post\"\r\n                value={this.state.post}\r\n                onInput={this.handleInput}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Post Article</MDBBtn>\r\n            </div>\r\n          </form>\r\n          </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    </>\r\n    )}\r\n}\r\n\r\n\r\nexport default ArticlesPostPage;","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,MDBCard,MDBCardBody } from 'mdbreact';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NavBar from '../component/navBar'\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass GifsPostPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      file: null,\r\n      gifId:0\r\n    };\r\n    this.fileInputHandler = React.createRef();\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n    console.log(this.fileInputHandler,\" <<:>> \",this.fileInputHandler.current);\r\n    if (!this.state.title || !this.fileInputHandler.current.files[0]){\r\n        alert('Enter valid Title or File ')\r\n        return\r\n    }\r\n\r\n\r\n    const fileData = new FormData() \r\n    fileData.append('file', this.fileInputHandler.current.files[0])\r\n    fileData.append('title', this.state.title)\r\n    fileData.append('authorId', '4')\r\n    fileData.append('isGif', 'true')\r\n    fileData.append('flaged', 'false')\r\n    fileData.append('createdOn', new Date())\r\n\r\n    // http://localhost:3337/api/v1/auth/signin\r\n    // https://teamwork-leo.herokuapp.com/\r\n    // console.log('STATE',this.state);\r\n\r\n    /*\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n             \"Content-Type\": \"multipart/form-data\"\r\n    */\r\n\r\n    fetch(APIendpoint + '/gifs', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n      },\r\n      body:fileData\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            console.log('DATA:',data.data.gifId, JSON.stringify(data.data))\r\n            this.setState({gifId:data.data.gifId})\r\n        })\r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid username or password')\r\n    });\r\n  }\r\n\r\n   render() {\r\n    if(this.state.gifId>0){\r\n        const articlePath = '/gifs/'+this.state.gifId\r\n       return <Redirect to={articlePath} />\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <NavBar/>\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard style={{ margin: \"10%\" }}>\r\n        <MDBCardBody>\r\n          <form onSubmit={this.sendForm}>\r\n            <p className=\"h5 text-center mb-4\">Post Gif</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Gif Title\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"title\"\r\n                value={this.state.title}\r\n                onInput={this.handleInput}\r\n              />\r\n              <div className=\"custom-file\">\r\n    <input\r\n      type=\"file\"\r\n      ref={this.fileInputHandler}\r\n    />\r\n  </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Post Article</MDBBtn>\r\n            </div>\r\n          </form>\r\n          </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    </>\r\n    )}\r\n}\r\n\r\n\r\nexport default GifsPostPage;","import React,{ Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FeedArticle from '../component/feedArticle'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport NavBar from '../component/navBar'\r\nimport {APIendpoint} from '../config/variables'\r\n\r\nclass FeedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      feed:[]\r\n    };\r\n  }\r\ngetFeed = () => {\r\n  return new Promise((resolve,reject)=>{\r\n\r\n    const articleId = this.props.match.params.articleId\r\n    console.log(\"ARTICLE_ID:\",articleId);\r\n    fetch(APIendpoint + '/articles/'+articleId, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            const post = data.data\r\n          console.log('DATA-ARTICLE',JSON.stringify(post));\r\n          let result\r\n          if(post.articleId){\r\n            result =  (<FeedArticle key= {post.articleId} post={post}></FeedArticle>)\r\n          }else{\r\n            result =  (<h2>Article post not found</h2>)\r\n          }\r\n          console.log('Article', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\n\r\nrender(){\r\n  const token = localStorage.getItem('token')\r\n  if(!token){\r\n      return <Redirect to=\"/signin\" />\r\n  }\r\n  if(this.state.feed.length===0){\r\n    this.getFeed().then((data)=>{\r\n      this.setState({feed:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return ( \r\n    <>\r\n    <NavBar/>\r\n      <MDBContainer> \r\n        <MDBRow>\r\n          {this.state.feed}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default FeedPage;","import React from \"react\";\r\nimport { MDBCardText } from 'mdbreact';\r\n\r\nconst FeedGif = (props) => {\r\n    console.log('COMMENTS POST:>>',JSON.stringify(props.comment));\r\n  return (\r\n\r\n          <MDBCardText style={{margin:\"10px\",width:\"100%\"}}>\r\n            {props.comment.comment}\r\n            <hr/>\r\n          </MDBCardText>\r\n  );\r\n};\r\n\r\nexport default FeedGif;\r\n\r\n\r\n/*\r\n\r\n*/","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn} from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass CommentsPostPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      comment: '',\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n    if (!this.state.comment){\r\n        alert('Enter valid comment ')\r\n        return\r\n    }\r\n    const id = this.props.id \r\n    const link = APIendpoint + '/articles/'+id+'/comments'\r\n    fetch(link, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')} ${localStorage.getItem('userId')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        comment: this.state.comment,\r\n        postId:id,\r\n        authorId:localStorage.getItem('userId'),\r\n        flaged:false,\r\n        createdOn:new Date()\r\n      })\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            console.log('DATA:', data)\r\n            this.setState({comment:''})\r\n            this.props.reLoadComments()\r\n        }).catch((err)=>console.log('ERROR!!!!',err))\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid comment')\r\n    });\r\n  }\r\n\r\n   render() {\r\n\r\n    return (\r\n        <>\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <br/>\r\n          <form onSubmit={this.sendForm}>\r\n            <p className=\"h5 text-center mb-8\">Post Comment</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                type=\"textarea\"\r\n                rows=\"4\"\r\n                name=\"comment\"\r\n                label=\"Enter Your Comment\"\r\n                icon=\"pencil-alt\"\r\n                value={this.state.comment}\r\n                onInput={this.handleInput}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Post Comment</MDBBtn>\r\n            </div>\r\n          </form>\r\n\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    </>\r\n    )}\r\n}\r\n\r\n\r\nexport default CommentsPostPage;","import React,{ Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CommentsPost from '../component/commentsPost'\r\nimport CommentsPostPage from './commentsPostPage'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n\r\nclass CommentsPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      comments: [],\r\n      postId:null\r\n    };\r\n  }\r\ngetComments = () => {\r\n  return new Promise((resolve,reject)=>{\r\n    const id = this.props.articleId || this.props.gifId\r\n    this.setState({postId:id})\r\n    const link = APIendpoint + '/articles/'+id+'/comments'\r\n    fetch(link, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n          if(!data.data){\r\n            return <></>\r\n          }\r\n            const result = data.data.map((comment)=>{\r\n              console.log(JSON.stringify(comment));\r\n            return (<CommentsPost key= {comment.commentId} comment={comment}></CommentsPost>)\r\n          })\r\n          console.log('FEED', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\nreLoadComments(){\r\n    this.setState({comments:[]})\r\n}\r\nrender(){\r\n  const token = localStorage.getItem('token')\r\n  if(!token){\r\n      return <Redirect to=\"/signin\" />\r\n  }\r\n  if(this.state.comments.length===0){\r\n    this.getComments().then((data)=>{\r\n      this.setState({comments:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return ( \r\n    <>\r\n      <MDBContainer> \r\n          <MDBRow>\r\n              <CommentsPostPage reLoadComments={()=>this.reLoadComments()} id={this.state.postId}/>\r\n          </MDBRow>\r\n        <MDBRow>\r\n          {this.state.comments}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default CommentsPage;","import React from \"react\";\r\nimport { MDBCardTitle,MDBCol,MDBCard,MDBCardBody,MDBCardImage } from 'mdbreact';\r\nimport CommentsPage from '../pages/commentsPage'\r\n\r\nconst FeedGif = (props) => {\r\n  const link = \"/gifs/\"+ props.post.gifId\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardImage className=\"img-fluid\" src={props.post.imageUrl} waves />\r\n          <CommentsPage gifId ={props.post.gifId} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedGif;\r\n\r\n\r\n/*\r\n\r\n*/","import React,{ Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport GifPost from '../component/gifPost'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport NavBar from '../component/navBar'\r\nimport {APIendpoint} from '../config/variables'\r\n\r\nclass FeedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      feed:[]\r\n    };\r\n  }\r\ngetFeed = () => {\r\n  return new Promise((resolve,reject)=>{\r\n\r\n    const gifId = this.props.match.params.gifId\r\n    console.log(\"GIF_ID:\",gifId);\r\n    fetch(APIendpoint + '/gifs/'+gifId, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            const post = data.data\r\n          console.log('DATA-ARTICLE',JSON.stringify(post));\r\n          let result\r\n          if(post.gifId){\r\n                result =  (<GifPost key={post.gifId} post={post}></GifPost>)\r\n          }else{\r\n             result =  (<h2>Gif post not found</h2>)\r\n          }\r\n          console.log('Gif', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\n\r\nrender(){\r\n  const token = localStorage.getItem('token')\r\n  if(!token){\r\n      return <Redirect to=\"/signin\" />\r\n  }\r\n  if(this.state.feed.length===0){\r\n    this.getFeed().then((data)=>{\r\n      this.setState({feed:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return ( \r\n    <>\r\n    <NavBar/>\r\n      <MDBContainer> \r\n        <MDBRow>\r\n          {this.state.feed}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default FeedPage;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\n// navigation bar\r\n// import NavBar from './component/navBar'\r\n\r\n// Route Pages\r\nimport FeedPage from './pages/feedPage';\r\nimport LoginPage from './pages/loginPage';\r\nimport LogoutPage from './pages/logoutPage';\r\nimport ArticlesPostPage from './pages/articlesPostPage';\r\nimport GifsPostPage from './pages/gifsPostPage';\r\nimport ArticlesPage from './pages/articlesPage';\r\nimport GifsPage from './pages/gifsPage';\r\n\r\n\r\nclass Routes extends React.Component {\r\n\r\n      constructor() {\r\n    super();\r\n    this.state = {\r\n      tag: '',\r\n    };\r\n  }\r\n  render() {\r\n  \r\n    return (\r\n        <>\r\n      <Switch>\r\n        \r\n        {/* FREE */}\r\n        <Route path='/signin' component={LoginPage} />\r\n        <Route path='/signout' component={LogoutPage} />\r\n        <Route path='/post-article' component={ArticlesPostPage} />\r\n        <Route path='/post-gif' component={GifsPostPage} />\r\n        <Route path='/articles/:articleId' component={ArticlesPage} />\r\n        <Route path='/gifs/:gifId' component={GifsPage} />\r\n        \r\n\r\n        <Route exact path='/' component={FeedPage} />\r\n\r\n        <Route\r\n          render={function() {\r\n            return <h1>404 Page Not Found</h1>;\r\n          }} \r\n        />\r\n      </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n  return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n          <Routes />\r\n        </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// MDLREACT\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}
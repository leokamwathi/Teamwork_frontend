{"version":3,"sources":["config/variables.js","component/navBar.js","component/flagButton.js","component/feedArticle.js","component/feedGif.js","pages/feedPage.js","pages/loginPage.js","pages/logoutPage.js","pages/articlesPostPage.js","pages/gifsPostPage.js","component/commentsPost.js","pages/commentsPostPage.js","pages/commentsPage.js","component/articlePost.js","pages/articlesPage.js","component/gifPost.js","pages/gifsPage.js","routes.js","App.js","index.js"],"names":["module","exports","APIendpoint","linkAppend","NavbarPage","toggleCollapse","setState","isOpen","state","token","localStorage","getItem","setTimeout","this","props","reponame","feedlink","window","location","pathname","split","postArticleLink","postGifLink","signOutLink","navbuttons","length","id","navbar","left","href","icon","right","nav","caret","className","color","dark","expand","onClick","Component","FeedArticle","disabled","post","flag","articleId","gifId","APIlink","fetch","method","headers","body","JSON","stringify","postId","then","res","json","data","reRender","catch","err","console","log","alert","handleFlag","link","md","style","margin","authorName","title","FeedGif","src","imageUrl","waves","FeedPage","getFeed","Promise","resolve","reject","result","map","key","isRender","isReRender","feed","isReRe","to","LoginFormPage","handleInput","e","target","name","value","sendForm","email","password","removeItem","setItem","userId","loggedIn","onSubmit","label","group","type","validate","error","success","autoComplete","onInput","LogoutPage","clear","singinLink","ArticlesPostPage","isGif","authorId","flaged","createdOn","Date","articlePath","GifsPostPage","fileInputHandler","current","files","fileData","FormData","append","file","React","createRef","ref","width","comment","CommentsPostPage","reLoadComments","rows","CommentsPage","getComments","commentId","comments","checkedComments","articlePost","match","params","GifFeedPage","getGifFeed","giffeed","Routes","tag","prop_token","path","component","LoginPage","render","ArticlesPage","GifsPage","exact","App","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.111a4905.chunk.js","sourcesContent":["\r\n\r\n// const APIendpoint = \"http://localhost:3337/api/v1\"\r\nconst APIendpoint = \"https://teamwork-leo.herokuapp.com/api/v1\"\r\n\r\n\r\nconst linkAppend = \"/Teamwork_frontend/\";\r\n//const linkAppend = \"/\";\r\n\r\n\r\nmodule.exports = {APIendpoint,linkAppend}","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n// import {linkAppend} from '../config/variables'\r\n\r\n\r\nclass NavbarPage extends Component {\r\n   constructor() {\r\n  super()\r\n     const token = localStorage.getItem('token')\r\n      this.state = {\r\n      isOpen: false,\r\n      token\r\n    };\r\n   // console.log('constructor',this.state);\r\n   }\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\ncomponentDidMount(){\r\n // console.log('component_dm',this.state.token,localStorage.getItem('token'));\r\n  // this.setState({token:localStorage.getItem('token')})\r\n  // setTimeout(() => {\r\n  //   this.setState({ token: localStorage.getItem('token') })\r\n  //   console.log('I WAS setTimeOUT', this.state.token);\r\n  // }, 2000)\r\n}\r\n\r\n// componentWillMount() {\r\n//  // this.setState({ token: localStorage.getItem('token') })\r\n//   // console.log('wum',localStorage.getItem('token'));\r\n\r\n//   }\r\nrender() {\r\n  setTimeout(() => {\r\n    this.setState({ token: localStorage.getItem('token') })\r\n  }, 0)\r\n\r\n  let linkAppend = this.props.reponame\r\n  if (window.location.pathname.split('/')[1] === 'Teamwork_frontend') {\r\n    linkAppend = \"/Teamwork_frontend/\"\r\n  } else {\r\n    linkAppend = \"/\"\r\n  }\r\n  // || \r\n  const feedlink = linkAppend;\r\n  const postArticleLink = linkAppend + \"post-article\";\r\n  const postGifLink = linkAppend + \"post-gif\";\r\n  const signOutLink = linkAppend + \"signout\";\r\n  let navbuttons = (<></>);\r\n\r\n  if ((this.state.token && this.state.token.length===0)|| !this.state.token){\r\n    navbuttons = (<></>)\r\n  }else{\r\n    navbuttons = (<MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n      <MDBNavbarNav left>\r\n        <MDBNavItem>\r\n          <MDBDropdownItem href={feedlink}><MDBIcon icon=\"rss\" /> Feed</MDBDropdownItem>\r\n        </MDBNavItem>\r\n        <MDBNavItem>\r\n          <MDBDropdownItem href={postArticleLink}><MDBIcon icon=\"newspaper\" /> Post Article</MDBDropdownItem>\r\n        </MDBNavItem>\r\n        <MDBNavItem>\r\n          <MDBDropdownItem href={postGifLink}><MDBIcon icon=\"image\" /> Post Gif</MDBDropdownItem >\r\n        </MDBNavItem>\r\n      </MDBNavbarNav>\r\n      <MDBNavbarNav right>\r\n        <MDBNavItem>\r\n          <MDBDropdown>\r\n            <MDBDropdownToggle nav caret>\r\n              <MDBIcon icon=\"user\" />\r\n            </MDBDropdownToggle>\r\n            <MDBDropdownMenu className=\"dropdown-default\">\r\n              <MDBDropdownItem href={signOutLink}>logout</MDBDropdownItem>\r\n            </MDBDropdownMenu>\r\n          </MDBDropdown>\r\n        </MDBNavItem>\r\n      </MDBNavbarNav>\r\n    </MDBCollapse>);\r\n  }\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <MDBNavbar color=\"aqua-gradient\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n  <strong className=\"white-text\">TEAMWORK</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        {navbuttons}\r\n      </MDBNavbar>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React from \"react\";\r\nimport { MDBBtn, MDBIcon} from 'mdbreact';\r\nimport { APIendpoint } from '../config/variables'\r\n\r\nconst handleFlag = (props) => {\r\n    const id = props.post.articleId || props.post.gifId\r\n    if(!id){\r\n        // console.log('Invalid ID');\r\n        return\r\n    }\r\n    const APIlink = APIendpoint + '/articles/' + id + '/flag'\r\n    // console.log(\"LINK DES..\", APIlink);\r\n    fetch(APIlink, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')} ${localStorage.getItem('userId')}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            postId: id,\r\n            flag: true,\r\n        })\r\n    })\r\n        .then(res => {\r\n            res.json().then((data) => {\r\n                // console.log('FLAGGED DATA:', data)\r\n                props.reRender()\r\n            }).catch((err) => console.log(err))\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            alert('Invalid flag')\r\n        });\r\n}\r\nconst FeedArticle = (props) => {\r\n    // console.log('FLAG STATUS: ',props.post.flag);\r\n    const flagDisabled = () => { return (props.post.flag && props.post.flag) === true ? true : false }\r\n    return (\r\n        <MDBBtn disabled={flagDisabled()} onClick={() => handleFlag(props)}><MDBIcon icon=\"flag\" /> Flag</MDBBtn>\r\n    );\r\n};\r\n\r\nexport default FeedArticle;\r\n\r\n\r\n/*\r\n\r\n*/","import React from \"react\";\r\nimport { MDBCardText,MDBBtn,MDBCardTitle,MDBCol,MDBCard,MDBCardBody } from 'mdbreact';\r\nimport FlagButton from '../component/flagButton'\r\n\r\n// const handleFlag = (props) => {\r\n//   const articleId = props.post.articleId\r\n//   // console.log('Article ID Flaged' + articleId);\r\n// }\r\nconst FeedArticle = (props) => {\r\n\r\n  \r\n  let linkAppend = \"/\";\r\n  if (window.location.pathname.split('/')[1] === 'Teamwork_frontend') {\r\n    linkAppend = \"/Teamwork_frontend/\"\r\n  }\r\n\r\n  const link = linkAppend + \"articles/\"+ props.post.articleId\r\n   // \r\n  // const flagDisabled = () => { return props.post.flaged == true ? true:false}\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n            <div className=\"content\">\r\n              {props.post.authorName} \r\n            </div>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardText>\r\n            {props.post.post}\r\n          </MDBCardText>\r\n          <MDBBtn href={link}>View</MDBBtn>\r\n          <FlagButton post={props.post} reRender={() => props.reRender()}/>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedArticle;\r\n\r\n\r\n/*\r\n         <MDBBtn disabled={flagDisabled()} onClick={() => handleFlag(props)}>Flag</MDBBtn>\r\n*/","import React from \"react\";\r\nimport {MDBBtn,MDBCardTitle,MDBCol,MDBCard,MDBCardBody,MDBCardImage } from 'mdbreact';\r\nimport FlagButton from '../component/flagButton'\r\n\r\n// const handleFlag = (props) => {\r\n//   const gifId = props.post.gifId\r\n//   // console.log('Gif ID Flaged' + gifId);\r\n// }\r\n\r\nconst FeedGif = (props) => {\r\n\r\n  \r\n  let linkAppend = \"/\";\r\n  if (window.location.pathname.split('/')[1] === 'Teamwork_frontend') {\r\n    linkAppend = \"/Teamwork_frontend/\"\r\n  }\r\n  \r\n  const link = linkAppend+\"gifs/\"+ props.post.gifId\r\n // const flagDisabled = () => { return props.post.flaged == true ? true : false }\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <div className=\"content\">\r\n              {props.post.authorName} \r\n            </div>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardImage className=\"img-fluid\" src={props.post.imageUrl} waves />\r\n          <MDBBtn href={link}>View</MDBBtn>\r\n          <FlagButton post={props.post} reRender={() => props.reRender()} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedGif;\r\n\r\n\r\n/*\r\n\r\n*/","import React,{ Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FeedArticle from '../component/feedArticle'\r\nimport FeedGif from '../component/feedGif'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #5 Employee can view feed\r\nclass FeedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isReRender:false,\r\n      feed: []\r\n    };\r\n  }\r\nreRender(){\r\n  const isReRe = !this.state.isReRender\r\n // console.log(\"I AM RENDER\");\r\n  this.setState({isReRender:isReRe})\r\n    this.getFeed().then((data) => {\r\n      this.setState({ feed: data })\r\n    }).catch((err) => console.log(err))\r\n}\r\ngetFeed = () => {\r\n  return new Promise((resolve,reject)=>{\r\n    fetch(APIendpoint +'/feed', {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n          const result = data.data.map((post)=>{\r\n          if(post.articleId){\r\n            return (<FeedArticle key={post.articleId} post={post} reRender={() => this.reRender()} isRender={this.state.isReRender}></FeedArticle>)\r\n          }else{\r\n            return (<FeedGif key={post.gifId} post={post}></FeedGif>)\r\n          }\r\n          })\r\n          // console.log('FEED', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\ncomponentDidMount() {\r\n    if(this.state.feed.length===0){\r\n    this.getFeed().then((data)=>{\r\n      this.setState({feed:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n}\r\nrender(){\r\n  const token = localStorage.getItem('token')\r\n  if(!token){\r\n      return <Redirect to=\"/signin\" />\r\n  }\r\n  return ( \r\n    <>\r\n      <MDBContainer> \r\n        <MDBRow>\r\n          {this.state.feed}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default FeedPage;","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,MDBCard,MDBCardBody} from 'mdbreact';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass LoginFormPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      loggedIn:false\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n\r\n    fetch(APIendpoint + '/auth/signin', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      })\r\n    })\r\n    .then(res => {\r\n      // console.log('RAW RES', res);\r\n        res.json().then((data)=>{\r\n          // console.log('RAW DATA:', data)\r\n           //  console.log('DATA:', `${data.data.token} ${data.data.userId}`)\r\n\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('userId')\r\n          if(data.data.token){\r\n            localStorage.setItem('token', data.data.token)\r\n            localStorage.setItem('userId', data.data.userId)\r\n          }\r\n           //  console.log(\"LOCAL TOKEN\",localStorage.getItem('token'))\r\n            this.setState({loggedIn:true})\r\n        }).catch(err => {\r\n            console.log(err)\r\n            alert('Invalid username or password')\r\n        });\r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid username or password')\r\n    });\r\n  }\r\n\r\n   render() {\r\n    if(this.state.loggedIn){\r\n       return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard style={{ margin: \"10%\" }}>\r\n        <MDBCardBody>\r\n          <form onSubmit = {this.sendForm}>\r\n            <p className=\"h5 text-center mb-4\">Sign in</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Type your email\"\r\n                icon=\"envelope\"\r\n                group\r\n                type=\"email\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"email\"\r\n                autoComplete=\"email\" \r\n                value={this.state.email}\r\n                onInput={this.handleInput}\r\n              />\r\n              <MDBInput\r\n                label=\"Type your password\"\r\n                icon=\"lock\"\r\n                group\r\n                type=\"password\"\r\n                autoComplete=\"password\" \r\n                validate\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onInput={this.handleInput}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Login</MDBBtn>\r\n            </div>\r\n          </form>\r\n          </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    )}\r\n}\r\n\r\n\r\nexport default LoginFormPage;","import React, { Component} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\nclass LogoutPage extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      token: localStorage.getItem('token')\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    localStorage.setItem('token', '')\r\n    localStorage.removeItem('token')\r\n    localStorage.clear()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    localStorage.setItem('token', '')\r\n    localStorage.removeItem('token')\r\n    localStorage.clear()\r\n  }\r\n\r\nrender(){\r\n  let linkAppend = this.props.reponame\r\n  if (window.location.pathname && window.location.pathname.split('/')[1] === 'Teamwork_frontend') {\r\n    linkAppend = \"/Teamwork_frontend/\"\r\n  } else {\r\n    linkAppend =\"/\"\r\n  }\r\n\r\n  localStorage.setItem('token','')\r\n  localStorage.removeItem('token')\r\n  localStorage.clear()\r\n  const singinLink = linkAppend+\"signin\"\r\n  return (\r\n    <div>\r\n      You have been logged out.\r\n      <Redirect to={singinLink} />\r\n      </div>\r\n  );\r\n}\r\n};\r\n\r\nexport default LogoutPage;","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,MDBCard,MDBCardBody } from 'mdbreact';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass ArticlesPostPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      post: '',\r\n      articleId:0\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n    if (!this.state.title || !this.state.post){\r\n        alert('Enter valid Title or Post ')\r\n        return\r\n    }\r\n\r\n    fetch(APIendpoint + '/articles', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        title: this.state.title,\r\n        post: this.state.post,\r\n        isGif:false,\r\n        authorId:4,\r\n        flaged:false,\r\n        createdOn:new Date()\r\n      })\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n           // console.log('DATA:', JSON.stringify(data.data))\r\n            this.setState({articleId:data.data.articleId})\r\n        })\r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid username or password')\r\n    });\r\n  }\r\n\r\n   render() {\r\n    if(this.state.articleId>0){\r\n        const articlePath = '/articles/'+this.state.articleId\r\n       return <Redirect to={articlePath} />\r\n    }\r\n\r\n    return (\r\n        <>\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard style={{ margin: \"10%\" }}>\r\n        <MDBCardBody>\r\n          <form onSubmit={this.sendForm}>\r\n            <p className=\"h5 text-center mb-4\">Post Article</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Article Title\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"title\"\r\n                autoComplete=\"title\" \r\n                value={this.state.title}\r\n                onInput={this.handleInput}\r\n              />\r\n              <MDBInput\r\n                label=\"Article Post\"\r\n                group\r\n                type=\"textarea\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"post\"\r\n                autoComplete=\"post\" \r\n                value={this.state.post}\r\n                onInput={this.handleInput}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Post Article</MDBBtn>\r\n            </div>\r\n          </form>\r\n          </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    </>\r\n    )}\r\n}\r\n\r\n\r\nexport default ArticlesPostPage;","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,MDBCard,MDBCardBody } from 'mdbreact';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass GifsPostPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      file: null,\r\n      gifId:0\r\n    };\r\n    this.fileInputHandler = React.createRef();\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n    // console.log(this.fileInputHandler,\" <<:>> \",this.fileInputHandler.current);\r\n    if (!this.state.title || !this.fileInputHandler.current.files[0]){\r\n        alert('Enter valid Title or File ')\r\n        return\r\n    }\r\n\r\n\r\n    const fileData = new FormData() \r\n    fileData.append('file', this.fileInputHandler.current.files[0])\r\n    fileData.append('title', this.state.title)\r\n    fileData.append('authorId', '4')\r\n    fileData.append('isGif', 'true')\r\n    fileData.append('flaged', 'false')\r\n    fileData.append('createdOn', new Date())\r\n\r\n    fetch(APIendpoint + '/gifs', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n      },\r\n      body:fileData\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            // console.log('DATA:',data.data.gifId, JSON.stringify(data.data))\r\n            this.setState({gifId:data.data.gifId})\r\n        })\r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid username or password')\r\n    });\r\n  }\r\n\r\n   render() {\r\n    if(this.state.gifId>0){\r\n        const articlePath = '/gifs/'+this.state.gifId\r\n       return <Redirect to={articlePath} />\r\n    }\r\n\r\n    return (\r\n        <>\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard style={{ margin: \"10%\" }}>\r\n        <MDBCardBody>\r\n          <form onSubmit={this.sendForm}>\r\n            <p className=\"h5 text-center mb-4\">Post Gif</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Gif Title\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"title\"\r\n                 autoComplete=\"title\" \r\n                value={this.state.title}\r\n                onInput={this.handleInput}\r\n              />\r\n              <div className=\"custom-file\">\r\n    <input\r\n      type=\"file\"\r\n      ref={this.fileInputHandler}\r\n    />\r\n  </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Post Gif</MDBBtn>\r\n            </div>\r\n          </form>\r\n         \r\n          </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n     <hr/>\r\n    </>\r\n    )}\r\n}\r\n\r\n\r\nexport default GifsPostPage;","import React from \"react\";\r\nimport { MDBCardText } from 'mdbreact';\r\n\r\nconst FeedGif = (props) => {\r\n    // console.log('COMMENTS POST:>>',JSON.stringify(props.comment));\r\n  return (\r\n          <MDBCardText style={{margin:\"10px\",width:\"100%\"}}>\r\n            <b>{props.comment.authorName}:</b>\r\n            {props.comment.comment}\r\n            <hr/>\r\n          </MDBCardText>\r\n  );\r\n};\r\n\r\nexport default FeedGif;\r\n\r\n\r\n/*\r\n\r\n*/","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn} from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass CommentsPostPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      comment: '',\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n    if (!this.state.comment){\r\n        alert('Enter valid comment ')\r\n        return\r\n    }\r\n    const id = this.props.id \r\n    const link = APIendpoint + '/articles/'+id+'/comments'\r\n    fetch(link, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')} ${localStorage.getItem('userId')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        comment: this.state.comment,\r\n        postId:id,\r\n        authorId:localStorage.getItem('userId'),\r\n        flaged:false,\r\n        createdOn:new Date()\r\n      })\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            // console.log('DATA:', data)\r\n            this.setState({comment:''})\r\n            this.props.reLoadComments()\r\n        }).catch((err)=>console.log(err))\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid comment')\r\n    });\r\n  }\r\n\r\n   render() {\r\n\r\n    return (\r\n        <>\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <br/>\r\n          <form onSubmit={this.sendForm}>\r\n            <p className=\"h5 mb-8\">Post Comment</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                type=\"textarea\"\r\n                rows=\"2\"\r\n                name=\"comment\"\r\n                autoComplete=\"comment\" \r\n                label=\"Enter Your Comment\"\r\n                icon=\"pencil-alt\"\r\n                value={this.state.comment}\r\n                onInput={this.handleInput}\r\n              />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <MDBBtn onClick={()=>this.sendForm()}>Post</MDBBtn>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    <br/>\r\n    </>\r\n    )}\r\n}\r\n\r\n\r\nexport default CommentsPostPage;","import React,{ Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CommentsPost from '../component/commentsPost'\r\nimport CommentsPostPage from './commentsPostPage'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n\r\nclass CommentsPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      comments: [],\r\n      checkedComments:false,\r\n      postId:null\r\n    };\r\n  }\r\ngetComments = () => {\r\n  return new Promise((resolve,reject)=>{\r\n    const id = this.props.articleId || this.props.gifId\r\n    this.setState({postId:id})\r\n    const link = APIendpoint + '/articles/'+id+'/comments'\r\n    fetch(link, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n          if(!data.data || data.data.length===0){\r\n            return <></>\r\n          }\r\n            const result = data.data.map((comment)=>{\r\n              // console.log(JSON.stringify(comment));\r\n            return (<CommentsPost key= {comment.commentId} comment={comment}></CommentsPost>)\r\n          })\r\n          // console.log('FEED', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\nreLoadComments(){\r\n  this.setState({ comments: []})\r\n  this.getComments().then((data) => {\r\n    this.setState({ comments: data})\r\n  }).catch((err) => console.log(err))\r\n}\r\nrender(){\r\n  const token = localStorage.getItem('token')\r\n  if(!token){\r\n      return <Redirect to=\"/signin\" />\r\n  }\r\n  if (this.state.comments.length === 0){\r\n    this.getComments().then((data)=>{\r\n      this.setState({ comments: data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return ( \r\n    <>\r\n      <MDBContainer> \r\n          <MDBRow>\r\n          <CommentsPostPage reLoadComments={() => this.reLoadComments()} id={this.props.articleId || this.props.gifId || this.state.postId}/>\r\n          </MDBRow>\r\n        <MDBRow>\r\n          {this.state.comments}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default CommentsPage;","import React from \"react\";\r\nimport { MDBCardTitle, MDBCol, MDBCard, MDBCardBody, MDBCardText } from 'mdbreact';\r\nimport CommentsPage from '../pages/commentsPage'\r\n\r\nconst articlePost = (props) => {\r\n // const link = \"/articles/\"+ props.post.articleId\r\n // const { collapseID } = props.post.articleId;\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <div className=\"content\">\r\n              {props.post.authorName} \r\n            </div>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardText>\r\n            {props.post.post}\r\n          </MDBCardText>\r\n          <CommentsPage articleId={props.post.articleId} />         \r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default articlePost;\r\n\r\n\r\n","import React,{ Component } from \"react\";\r\nimport ArticlePost from '../component/articlePost'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\nclass FeedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isReRender:false,\r\n      feed:[]\r\n    };\r\n  }\r\ngetFeed = () => {\r\n  return new Promise((resolve,reject)=>{\r\n\r\n    const articleId = this.props.match.params.articleId\r\n    // console.log(\"ARTICLE_ID:\",articleId);\r\n    fetch(APIendpoint + '/articles/'+articleId, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            const post = data.data\r\n         //  console.log('DATA-ARTICLE',JSON.stringify(post));\r\n          let result\r\n          if(post.articleId){\r\n            result =  (<ArticlePost key= {post.articleId} post={post}></ArticlePost>)\r\n          }else{\r\n            result =  (<h2>Article post not found</h2>)\r\n          }\r\n          // console.log('Article', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\n\r\nrender(){\r\n  if(this.state.feed.length===0){\r\n    this.getFeed().then((data)=>{\r\n      this.setState({feed:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return ( \r\n    <>\r\n      <MDBContainer> \r\n        <MDBRow>\r\n          {this.state.feed}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default FeedPage;","import React from \"react\";\r\nimport { MDBCardTitle,MDBCol,MDBCard,MDBCardBody,MDBCardImage } from 'mdbreact';\r\nimport CommentsPage from '../pages/commentsPage'\r\n\r\nconst FeedGif = (props) => {\r\n // const link = \"/gifs/\"+ props.post.gifId\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <div className=\"content\">\r\n              {props.post.authorName} \r\n            </div>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardImage className=\"img-fluid\" src={props.post.imageUrl} waves />\r\n          <CommentsPage gifId ={props.post.gifId} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedGif;\r\n\r\n\r\n/*\r\n\r\n*/","import React,{ Component } from \"react\";\r\nimport GifPost from '../component/gifPost'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\nclass GifFeedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      giffeed:[]\r\n    };\r\n  }\r\ngetGifFeed = () => {\r\n  return new Promise((resolve,reject)=>{\r\n\r\n    const gifId = this.props.match.params.gifId\r\n    console.log(\"GIF_ID:\",gifId);\r\n    fetch(APIendpoint + '/gifs/'+gifId, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            const post = data.data\r\n          // console.log('DATA-ARTICLE',JSON.stringify(post));\r\n          let result\r\n          if(post.gifId){\r\n                result =  (<GifPost key={post.gifId} post={post}></GifPost>)\r\n          }else{\r\n             result =  (<h2>Gif post not found</h2>)\r\n          }\r\n          // console.log('Gif', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\n\r\nrender(){\r\n  if(this.state.giffeed.length===0){\r\n    this.getGifFeed().then((data)=>{\r\n      this.setState({giffeed:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return ( \r\n    <>\r\n      <MDBContainer> \r\n        <MDBRow>\r\n          {this.state.giffeed}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default GifFeedPage;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\n// navigation bar\r\nimport NavBar from './component/navBar'\r\n\r\n// Route Pages\r\nimport FeedPage from './pages/feedPage';\r\nimport LoginPage from './pages/loginPage';\r\nimport LogoutPage from './pages/logoutPage';\r\nimport ArticlesPostPage from './pages/articlesPostPage';\r\nimport GifsPostPage from './pages/gifsPostPage';\r\nimport ArticlesPage from './pages/articlesPage';\r\nimport GifsPage from './pages/gifsPage';\r\n\r\n\r\nclass Routes extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tag: '',\r\n      token:localStorage.getItem('token'),\r\n    };\r\n  \r\n  }\r\n//WARNING! To be deprecated in React v17. Use componentDidMount instead.\r\n\r\n  componentDidMount() {\r\n    // console.log('component_dm', this.state.token, localStorage.getItem('token'));\r\n    // this.setState({token:localStorage.getItem('token')})\r\n    // setTimeout(() => {\r\n    //   this.setState({ token: localStorage.getItem('token') })\r\n    //   console.log('I ROUTER CDM setTimeOUT', this.state.token);\r\n    // }, 2000)\r\n  }\r\n\r\n  //WARNING! To be deprecated in React v17. Use componentDidMount instead.\r\n  // componentWillMount() {\r\n  //   // setTimeout(() => {\r\n  //   //   this.setState({ token: localStorage.getItem('token') })\r\n  //   //   console.log('I ROUTER CWM setTimeOUT', this.state.token);\r\n  //   // }, 2000)\r\n  // }\r\n\r\n  render() {\r\n\r\n    // const singinLink = \"/signin\"\r\n    // if (!this.state.token){\r\n    //   if (window.location.pathname && (window.location.pathname.split('/')[1] !== 'signin' || window.location.pathname.split('/')[2] !== 'signin')){\r\n    //     return <Redirect to={singinLink}/>\r\n    //   }\r\n    // }\r\n//render={(props) => <Dashboard {...props} isAuthed={true} />}\r\n//render={(props) => <LogoutPage {...props} reponame={this.props.reponame} />}\r\n    return (\r\n        <>\r\n      <NavBar reponame = {this.props.reponame} prop_token={this.state.token}/>\r\n      <Switch>\r\n        {/* FREE */}\r\n        \r\n        <Route path='/signin' component={LoginPage} />\r\n          <Route path='/signout' render={(props) => <LogoutPage {...props} reponame={this.props.reponame} />} />\r\n        <Route path='/post-article' component={ArticlesPostPage} />\r\n          <Route path='/post-gif' component={GifsPostPage} />\r\n        <Route path='/articles/:articleId' component={ArticlesPage} />\r\n        <Route path='/gifs/:gifId' component={GifsPage} />\r\n        \r\n        <Route exact path='/' component={FeedPage} />\r\n\r\n        <Route\r\n          render={function() {\r\n            return <h1>404 Page Not Found</h1>;\r\n          }} \r\n        />\r\n      </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n  return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n      <Routes reponame={process.env.PUBLIC_URL} />\r\n        </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// MDLREACT\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}
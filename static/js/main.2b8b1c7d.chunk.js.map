{"version":3,"sources":["config/variables.js","component/navBar.js","component/flagButton.js","component/feedArticle.js","component/feedGif.js","pages/feedPage.js","pages/loginPage.js","pages/logoutPage.js","pages/articlesPostPage.js","pages/gifsPostPage.js","component/commentsPost.js","pages/commentsPostPage.js","pages/commentsPage.js","component/articlePost.js","pages/articlesPage.js","component/gifPost.js","pages/gifsPage.js","routes.js","App.js","index.js"],"names":["module","exports","APIendpoint","linkAppend","NavbarPage","toggleCollapse","setState","isOpen","state","token","localStorage","getItem","console","log","this","length","feedlink","postArticleLink","postGifLink","color","dark","expand","className","onClick","id","navbar","left","href","icon","right","nav","caret","Component","FeedArticle","props","post","flag","disabled","articleId","gifId","APIlink","fetch","method","headers","body","JSON","stringify","postId","then","res","json","data","reRender","catch","err","alert","handleFlag","link","md","style","margin","authorName","title","FeedGif","src","imageUrl","waves","FeedPage","getFeed","Promise","resolve","reject","result","map","key","isRender","isReRender","feed","isReRe","to","LoginFormPage","handleInput","e","target","name","value","sendForm","email","password","userId","removeItem","setItem","loggedIn","onSubmit","label","group","type","validate","error","success","autoComplete","onInput","LogoutPage","clear","singinLink","ArticlesPostPage","isGif","authorId","flaged","createdOn","Date","articlePath","GifsPostPage","fileInputHandler","current","files","fileData","FormData","append","file","React","createRef","ref","comment","width","CommentsPostPage","reLoadComments","rows","CommentsPage","getComments","commentId","comments","checkedComments","articlePost","collapseID","class","data-toggle","data-target","aria-expanded","aria-controls","match","params","GifFeedPage","getGifFeed","giffeed","Routes","tag","window","location","pathname","path","component","LoginPage","ArticlesPage","GifsPage","exact","render","App","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2b8b1c7d.chunk.js","sourcesContent":["\r\n\r\n// const APIendpoint = \"http://localhost:3337/api/v1\"\r\nconst APIendpoint = \"https://teamwork-leo.herokuapp.com/api/v1\"\r\n\r\n\r\nconst linkAppend = \"/Teamwork_frontend/\";\r\n//const linkAppend = \"/\";\r\n\r\n\r\nmodule.exports = {APIendpoint,linkAppend}","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport {linkAppend} from '../config/variables'\r\n\r\n\r\nclass NavbarPage extends Component {\r\n   constructor() {\r\n  super()\r\n    this.state = {\r\n      isOpen: false,\r\n      token: localStorage.getItem('token')\r\n    };\r\n    console.log('constructor',this.state);\r\n   }\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\ncomponentDidMount(){\r\n  console.log('dm',this.state.token,localStorage.getItem('token'));\r\n  this.setState({token:localStorage.getItem('token')})\r\n  \r\n}\r\n\r\ncomponentWillUnmount() {\r\n  console.log('wum',localStorage.getItem('token'));\r\n  }\r\nrender() {\r\n  // || \r\n  if ((this.state.token && this.state.token.length==0)|| !this.state.token){\r\n    return (<></>)\r\n  }\r\n  const feedlink = linkAppend;\r\n  const postArticleLink = linkAppend +\"post-article\";\r\n  const postGifLink = linkAppend +\"post-gif\";\r\n\r\n  return (\r\n    <Router>\r\n      <MDBNavbar color=\"aqua-gradient\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n  <strong className=\"white-text\">TEAMWORK</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem>\r\n              \r\n              <MDBDropdownItem href={feedlink}><MDBIcon icon=\"rss\" /> Feed</MDBDropdownItem>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBDropdownItem href={postArticleLink}><MDBIcon icon=\"newspaper\" /> Post Article</MDBDropdownItem>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBDropdownItem href={postGifLink}><MDBIcon icon=\"image\" /> Post Gif</MDBDropdownItem >\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n          <MDBNavbarNav right>\r\n            <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\" />\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\">\r\n                  <MDBDropdownItem href=\"{linkAppend}/signout\">logout</MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n    </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React from \"react\";\r\nimport { MDBBtn, MDBIcon} from 'mdbreact';\r\nimport { APIendpoint } from '../config/variables'\r\n\r\nconst handleFlag = (props) => {\r\n    const id = props.post.articleId || props.post.gifId\r\n    if(!id){\r\n        console.log('Invalid ID');\r\n        return\r\n    }\r\n    const APIlink = APIendpoint + '/articles/' + id + '/flag'\r\n    console.log(\"LINK DES..\", APIlink);\r\n    fetch(APIlink, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')} ${localStorage.getItem('userId')}`,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            postId: id,\r\n            flag: true,\r\n        })\r\n    })\r\n        .then(res => {\r\n            res.json().then((data) => {\r\n                console.log('FLAGGED DATA:', data)\r\n                props.reRender()\r\n            }).catch((err) => console.log('ERROR!!!!', err))\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n            alert('Invalid flag')\r\n        });\r\n}\r\nconst FeedArticle = (props) => {\r\n    console.log('FLAG STATUS: ',props.post.flag);\r\n    const flagDisabled = () => { return (props.post.flag && props.post.flag) == true ? true : false }\r\n    return (\r\n        <MDBBtn disabled={flagDisabled()} onClick={() => handleFlag(props)}><MDBIcon icon=\"flag\" /> Flag</MDBBtn>\r\n    );\r\n};\r\n\r\nexport default FeedArticle;\r\n\r\n\r\n/*\r\n\r\n*/","import React from \"react\";\r\nimport { MDBCardText,MDBBtn,MDBCardTitle,MDBCol,MDBCard,MDBCardBody } from 'mdbreact';\r\nimport FlagButton from '../component/flagButton'\r\n\r\nconst handleFlag = (props) => {\r\n  const articleId = props.post.articleId\r\n  // console.log('Article ID Flaged' + articleId);\r\n}\r\nconst FeedArticle = (props) => {\r\n   const link = \"/articles/\"+ props.post.articleId\r\n   // \r\n  const flagDisabled = () => { return props.post.flaged == true ? true:false}\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n            <div className=\"content\">\r\n              {props.post.authorName} \r\n            </div>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardText>\r\n            {props.post.post}\r\n          </MDBCardText>\r\n          <MDBBtn href={link}>View</MDBBtn>\r\n          <FlagButton post={props.post} reRender={() => props.reRender()}/>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedArticle;\r\n\r\n\r\n/*\r\n         <MDBBtn disabled={flagDisabled()} onClick={() => handleFlag(props)}>Flag</MDBBtn>\r\n*/","import React from \"react\";\r\nimport {MDBBtn,MDBCardTitle,MDBCol,MDBCard,MDBCardBody,MDBCardImage } from 'mdbreact';\r\nimport FlagButton from '../component/flagButton'\r\n\r\nconst handleFlag = (props) => {\r\n  const gifId = props.post.gifId\r\n  // console.log('Gif ID Flaged' + gifId);\r\n}\r\n\r\nconst FeedGif = (props) => {\r\n  const link = \"/gifs/\"+ props.post.gifId\r\n  const flagDisabled = () => { return props.post.flaged == true ? true : false }\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <div className=\"content\">\r\n              {props.post.authorName} \r\n            </div>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardImage className=\"img-fluid\" src={props.post.imageUrl} waves />\r\n          <MDBBtn href={link}>View</MDBBtn>\r\n          <FlagButton post={props.post} reRender={() => props.reRender()} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedGif;\r\n\r\n\r\n/*\r\n\r\n*/","import React,{ Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport FeedArticle from '../component/feedArticle'\r\nimport FeedGif from '../component/feedGif'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport NavBar from '../component/navBar'\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #5 Employee can view feed\r\nclass FeedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isReRender:false,\r\n      feed: []\r\n    };\r\n  }\r\nreRender(){\r\n  const isReRe = !this.state.isReRender\r\n  console.log(\"I AM RENDER\");\r\n  this.setState({isReRender:isReRe})\r\n    this.getFeed().then((data) => {\r\n      this.setState({ feed: data })\r\n    }).catch((err) => console.log(err))\r\n}\r\ngetFeed = () => {\r\n  return new Promise((resolve,reject)=>{\r\n    fetch(APIendpoint +'/feed', {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n          const result = data.data.map((post)=>{\r\n          if(post.articleId){\r\n            return (<FeedArticle key={post.articleId} post={post} reRender={() => this.reRender()} isRender={this.state.isReRender}></FeedArticle>)\r\n          }else{\r\n            return (<FeedGif key={post.gifId} post={post}></FeedGif>)\r\n          }\r\n          })\r\n          console.log('FEED', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\ncomponentDidMount() {\r\n    if(this.state.feed.length===0){\r\n    this.getFeed().then((data)=>{\r\n      this.setState({feed:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n}\r\nrender(){\r\n  const token = localStorage.getItem('token')\r\n  if(!token){\r\n      return <Redirect to=\"/signin\" />\r\n  }\r\n  return ( \r\n    <>\r\n      <MDBContainer> \r\n        <MDBRow>\r\n          {this.state.feed}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default FeedPage;","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,MDBCard,MDBCardBody} from 'mdbreact';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass LoginFormPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      loggedIn:false\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n\r\n    fetch(APIendpoint + '/auth/signin', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n      })\r\n    })\r\n    .then(res => {\r\n      console.log('RAW RES', res);\r\n        res.json().then((data)=>{\r\n          console.log('RAW DATA:', data)\r\n            console.log('DATA:', `${data.data.token} ${data.data.userId}`)\r\n\r\n            localStorage.removeItem('token')\r\n            localStorage.removeItem('userId')\r\n          if(data.data.token){\r\n            localStorage.setItem('token', data.data.token)\r\n            localStorage.setItem('userId', data.data.userId)\r\n          }\r\n            console.log(\"LOCAL TOKEN\",localStorage.getItem('token'))\r\n            this.setState({loggedIn:true})\r\n        }).catch(err => {\r\n            console.log(err)\r\n            alert('Invalid username or password')\r\n        });\r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid username or password')\r\n    });\r\n  }\r\n\r\n   render() {\r\n    if(this.state.loggedIn){\r\n       return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard style={{ margin: \"10%\" }}>\r\n        <MDBCardBody>\r\n          <form onSubmit = {this.sendForm}>\r\n            <p className=\"h5 text-center mb-4\">Sign in</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Type your email\"\r\n                icon=\"envelope\"\r\n                group\r\n                type=\"email\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"email\"\r\n                autoComplete=\"email\" \r\n                value={this.state.email}\r\n                onInput={this.handleInput}\r\n              />\r\n              <MDBInput\r\n                label=\"Type your password\"\r\n                icon=\"lock\"\r\n                group\r\n                type=\"password\"\r\n                autoComplete=\"password\" \r\n                validate\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onInput={this.handleInput}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Login</MDBBtn>\r\n            </div>\r\n          </form>\r\n          </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    )}\r\n}\r\n\r\n\r\nexport default LoginFormPage;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { linkAppend } from '../config/variables'\r\n\r\nconst LogoutPage = () => {\r\n  localStorage.removeItem('token')\r\n  localStorage.clear()\r\n  const singinLink = linkAppend + \"signin\"\r\n  return (\r\n    <div>\r\n      You have been logged out.\r\n      <Redirect to={singinLink} />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default LogoutPage;","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,MDBCard,MDBCardBody } from 'mdbreact';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NavBar from '../component/navBar'\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass ArticlesPostPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      post: '',\r\n      articleId:0\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n    if (!this.state.title || !this.state.post){\r\n        alert('Enter valid Title or Post ')\r\n        return\r\n    }\r\n\r\n    fetch(APIendpoint + '/articles', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        title: this.state.title,\r\n        post: this.state.post,\r\n        isGif:false,\r\n        authorId:4,\r\n        flaged:false,\r\n        createdOn:new Date()\r\n      })\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            console.log('DATA:', JSON.stringify(data.data))\r\n            this.setState({articleId:data.data.articleId})\r\n        })\r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid username or password')\r\n    });\r\n  }\r\n\r\n   render() {\r\n    if(this.state.articleId>0){\r\n        const articlePath = '/articles/'+this.state.articleId\r\n       return <Redirect to={articlePath} />\r\n    }\r\n\r\n    return (\r\n        <>\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard style={{ margin: \"10%\" }}>\r\n        <MDBCardBody>\r\n          <form onSubmit={this.sendForm}>\r\n            <p className=\"h5 text-center mb-4\">Post Article</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Article Title\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"title\"\r\n                autoComplete=\"title\" \r\n                value={this.state.title}\r\n                onInput={this.handleInput}\r\n              />\r\n              <MDBInput\r\n                label=\"Article Post\"\r\n                group\r\n                type=\"textarea\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"post\"\r\n                autoComplete=\"post\" \r\n                value={this.state.post}\r\n                onInput={this.handleInput}\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Post Article</MDBBtn>\r\n            </div>\r\n          </form>\r\n          </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    </>\r\n    )}\r\n}\r\n\r\n\r\nexport default ArticlesPostPage;","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn,MDBCard,MDBCardBody } from 'mdbreact';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport NavBar from '../component/navBar'\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass GifsPostPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: '',\r\n      file: null,\r\n      gifId:0\r\n    };\r\n    this.fileInputHandler = React.createRef();\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n    console.log(this.fileInputHandler,\" <<:>> \",this.fileInputHandler.current);\r\n    if (!this.state.title || !this.fileInputHandler.current.files[0]){\r\n        alert('Enter valid Title or File ')\r\n        return\r\n    }\r\n\r\n\r\n    const fileData = new FormData() \r\n    fileData.append('file', this.fileInputHandler.current.files[0])\r\n    fileData.append('title', this.state.title)\r\n    fileData.append('authorId', '4')\r\n    fileData.append('isGif', 'true')\r\n    fileData.append('flaged', 'false')\r\n    fileData.append('createdOn', new Date())\r\n\r\n    fetch(APIendpoint + '/gifs', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n      },\r\n      body:fileData\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            console.log('DATA:',data.data.gifId, JSON.stringify(data.data))\r\n            this.setState({gifId:data.data.gifId})\r\n        })\r\n        \r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid username or password')\r\n    });\r\n  }\r\n\r\n   render() {\r\n    if(this.state.gifId>0){\r\n        const articlePath = '/gifs/'+this.state.gifId\r\n       return <Redirect to={articlePath} />\r\n    }\r\n\r\n    return (\r\n        <>\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <MDBCard style={{ margin: \"10%\" }}>\r\n        <MDBCardBody>\r\n          <form onSubmit={this.sendForm}>\r\n            <p className=\"h5 text-center mb-4\">Post Gif</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Gif Title\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                name=\"title\"\r\n                 autoComplete=\"title\" \r\n                value={this.state.title}\r\n                onInput={this.handleInput}\r\n              />\r\n              <div className=\"custom-file\">\r\n    <input\r\n      type=\"file\"\r\n      ref={this.fileInputHandler}\r\n    />\r\n  </div>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <MDBBtn onClick={this.sendForm}>Post Gif</MDBBtn>\r\n            </div>\r\n          </form>\r\n         \r\n          </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n     <hr/>\r\n    </>\r\n    )}\r\n}\r\n\r\n\r\nexport default GifsPostPage;","import React from \"react\";\r\nimport { MDBCardText } from 'mdbreact';\r\n\r\nconst FeedGif = (props) => {\r\n    console.log('COMMENTS POST:>>',JSON.stringify(props.comment));\r\n  return (\r\n          <MDBCardText style={{margin:\"10px\",width:\"100%\"}}>\r\n            <b>{props.comment.authorName}:</b>\r\n            {props.comment.comment}\r\n            <hr/>\r\n          </MDBCardText>\r\n  );\r\n};\r\n\r\nexport default FeedGif;\r\n\r\n\r\n/*\r\n\r\n*/","import React, { Component } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn} from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n// Fix #4 Employee can login and get a token.\r\nclass CommentsPostPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      comment: '',\r\n    };\r\n  }\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  sendForm = () => {\r\n    if (!this.state.comment){\r\n        alert('Enter valid comment ')\r\n        return\r\n    }\r\n    const id = this.props.id \r\n    const link = APIendpoint + '/articles/'+id+'/comments'\r\n    fetch(link, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')} ${localStorage.getItem('userId')}`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        comment: this.state.comment,\r\n        postId:id,\r\n        authorId:localStorage.getItem('userId'),\r\n        flaged:false,\r\n        createdOn:new Date()\r\n      })\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            console.log('DATA:', data)\r\n            this.setState({comment:''})\r\n            this.props.reLoadComments()\r\n        }).catch((err)=>console.log('ERROR!!!!',err))\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      alert('Invalid comment')\r\n    });\r\n  }\r\n\r\n   render() {\r\n\r\n    return (\r\n        <>\r\n<MDBContainer>\r\n      <MDBRow>\r\n        <MDBCol md=\"12\">\r\n          <br/>\r\n          <form onSubmit={this.sendForm}>\r\n            <p className=\"h5 mb-8\">Post Comment</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                type=\"textarea\"\r\n                rows=\"2\"\r\n                name=\"comment\"\r\n                autoComplete=\"comment\" \r\n                label=\"Enter Your Comment\"\r\n                icon=\"pencil-alt\"\r\n                value={this.state.comment}\r\n                onInput={this.handleInput}\r\n              />\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <MDBBtn onClick={()=>this.sendForm()}>Post</MDBBtn>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n    <br/>\r\n    </>\r\n    )}\r\n}\r\n\r\n\r\nexport default CommentsPostPage;","import React,{ Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CommentsPost from '../component/commentsPost'\r\nimport CommentsPostPage from './commentsPostPage'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\n\r\nclass CommentsPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      comments: [],\r\n      checkedComments:false,\r\n      postId:null\r\n    };\r\n  }\r\ngetComments = () => {\r\n  return new Promise((resolve,reject)=>{\r\n    const id = this.props.articleId || this.props.gifId\r\n    this.setState({postId:id})\r\n    const link = APIendpoint + '/articles/'+id+'/comments'\r\n    fetch(link, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n          if(!data.data || data.data.length==0){\r\n            return <></>\r\n          }\r\n            const result = data.data.map((comment)=>{\r\n              console.log(JSON.stringify(comment));\r\n            return (<CommentsPost key= {comment.commentId} comment={comment}></CommentsPost>)\r\n          })\r\n          console.log('FEED', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\nreLoadComments(){\r\n  this.setState({ comments: [], checkedComments: false})\r\n}\r\nrender(){\r\n  const token = localStorage.getItem('token')\r\n  if(!token){\r\n      return <Redirect to=\"/signin\" />\r\n  }\r\n  if (this.state.comments.length === 0 && this.state.checkedComments){\r\n    this.getComments().then((data)=>{\r\n      this.setState({ comments: data, checkedComments:true})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return ( \r\n    <>\r\n      <MDBContainer> \r\n          <MDBRow>\r\n              <CommentsPostPage reLoadComments={()=>this.reLoadComments()} id={this.state.postId}/>\r\n          </MDBRow>\r\n        <MDBRow>\r\n          {this.state.comments}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default CommentsPage;","import React from \"react\";\r\nimport { MDBCardTitle, MDBCol, MDBCard, MDBCardBody, MDBCardText, MDBCollapseHeader, MDBIcon, MDBCollapse } from 'mdbreact';\r\nimport CommentsPage from '../pages/commentsPage'\r\n\r\nconst articlePost = (props) => {\r\n  const link = \"/articles/\"+ props.post.articleId\r\n  const { collapseID } = props.post.articleId;\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <div className=\"content\">\r\n              {props.post.authorName} \r\n            </div>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardText>\r\n            {props.post.post}\r\n          </MDBCardText>\r\n          <div>\r\n            <button class=\"btn btn-primary\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\"\r\n              aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n              Comments\r\n            </button>\r\n          </div>\r\n          <div class=\"collapse\" id=\"collapseExample\">\r\n            Post comments\r\n            <CommentsPage articleId={props.post.articleId} />\r\n          </div>\r\n         \r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default articlePost;\r\n\r\n\r\n","import React,{ Component } from \"react\";\r\nimport ArticlePost from '../component/articlePost'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\nclass FeedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isReRender:false,\r\n      feed:[]\r\n    };\r\n  }\r\ngetFeed = () => {\r\n  return new Promise((resolve,reject)=>{\r\n\r\n    const articleId = this.props.match.params.articleId\r\n    console.log(\"ARTICLE_ID:\",articleId);\r\n    fetch(APIendpoint + '/articles/'+articleId, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            const post = data.data\r\n          console.log('DATA-ARTICLE',JSON.stringify(post));\r\n          let result\r\n          if(post.articleId){\r\n            result =  (<ArticlePost key= {post.articleId} post={post}></ArticlePost>)\r\n          }else{\r\n            result =  (<h2>Article post not found</h2>)\r\n          }\r\n          console.log('Article', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\n\r\nrender(){\r\n  if(this.state.feed.length===0){\r\n    this.getFeed().then((data)=>{\r\n      this.setState({feed:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return ( \r\n    <>\r\n      <MDBContainer> \r\n        <MDBRow>\r\n          {this.state.feed}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default FeedPage;","import React from \"react\";\r\nimport { MDBCardTitle,MDBCol,MDBCard,MDBCardBody,MDBCardImage } from 'mdbreact';\r\nimport CommentsPage from '../pages/commentsPage'\r\n\r\nconst FeedGif = (props) => {\r\n  const link = \"/gifs/\"+ props.post.gifId\r\n  return (\r\n      <MDBCol md=\"8\">\r\n      <MDBCard style={{ margin: \"10px\" }}>\r\n        <MDBCardBody>\r\n          <div className=\"content\">\r\n              {props.post.authorName} \r\n            </div>\r\n          <MDBCardTitle>{props.post.title}</MDBCardTitle>\r\n          <MDBCardImage className=\"img-fluid\" src={props.post.imageUrl} waves />\r\n          <CommentsPage gifId ={props.post.gifId} />\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBCol>\r\n  );\r\n};\r\n\r\nexport default FeedGif;\r\n\r\n\r\n/*\r\n\r\n*/","import React,{ Component } from \"react\";\r\nimport GifPost from '../component/gifPost'\r\nimport { MDBContainer, MDBRow } from 'mdbreact';\r\nimport {APIendpoint} from '../config/variables'\r\n\r\nclass GifFeedPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      giffeed:[]\r\n    };\r\n  }\r\ngetGifFeed = () => {\r\n  return new Promise((resolve,reject)=>{\r\n\r\n    const gifId = this.props.match.params.gifId\r\n    console.log(\"GIF_ID:\",gifId);\r\n    fetch(APIendpoint + '/gifs/'+gifId, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Bearer ${localStorage.getItem('token')} 4`,\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n\r\n    .then(res => {\r\n        res.json().then((data)=>{\r\n            const post = data.data\r\n          console.log('DATA-ARTICLE',JSON.stringify(post));\r\n          let result\r\n          if(post.gifId){\r\n                result =  (<GifPost key={post.gifId} post={post}></GifPost>)\r\n          }else{\r\n             result =  (<h2>Gif post not found</h2>)\r\n          }\r\n          console.log('Gif', result);\r\n            resolve(result)\r\n        })\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      reject(err)\r\n    });\r\n  })}\r\n  \r\n\r\nrender(){\r\n  if(this.state.giffeed.length===0){\r\n    this.getGifFeed().then((data)=>{\r\n      this.setState({giffeed:data})\r\n    }).catch((err)=>console.log(err))\r\n  }\r\n  return ( \r\n    <>\r\n      <MDBContainer> \r\n        <MDBRow>\r\n          {this.state.giffeed}\r\n        </MDBRow>\r\n      </MDBContainer>\r\n   </>\r\n  );\r\n};\r\n}\r\n\r\nexport default GifFeedPage;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport {linkAppend } from './config/variables'\r\n\r\n// navigation bar\r\nimport NavBar from './component/navBar'\r\n\r\n// Route Pages\r\nimport FeedPage from './pages/feedPage';\r\nimport LoginPage from './pages/loginPage';\r\nimport LogoutPage from './pages/logoutPage';\r\nimport ArticlesPostPage from './pages/articlesPostPage';\r\nimport GifsPostPage from './pages/gifsPostPage';\r\nimport ArticlesPage from './pages/articlesPage';\r\nimport GifsPage from './pages/gifsPage';\r\n\r\n\r\nclass Routes extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tag: '',\r\n      token:localStorage.getItem('token'),\r\n    };\r\n  }\r\n  render() {\r\n    const singinLink = linkAppend +\"signin\"\r\n    if (!this.state.token){\r\n      if (window.location.pathname !== '/signin'){\r\n        return <Redirect to={singinLink}/>\r\n      }\r\n    }\r\n\r\n    return (\r\n        <>\r\n      <NavBar/>\r\n      <Switch>\r\n        {/* FREE */}\r\n        <Route path='/signin' component={LoginPage} />\r\n        <Route path='/signout' component={LogoutPage} />\r\n        <Route path='/post-article' component={ArticlesPostPage} />\r\n        <Route path='/post-gif' component={GifsPostPage} />\r\n        <Route path='/articles/:articleId' component={ArticlesPage} />\r\n        <Route path='/gifs/:gifId' component={GifsPage} />\r\n        \r\n        <Route exact path='/' component={FeedPage} />\r\n\r\n        <Route\r\n          render={function() {\r\n            return <h1>404 Page Not Found</h1>;\r\n          }} \r\n        />\r\n      </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;","import React from 'react';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './routes';\r\n\r\nfunction App() {\r\n  return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n          <Routes />\r\n        </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// MDLREACT\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}